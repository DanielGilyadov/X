// src/pages/Home.jsx
import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import './Pages.css';
import './Home.css'; 

const Home = () => {
  const [isLoaded, setIsLoaded] = useState(false);

  useEffect(() => {
    setIsLoaded(true);
    
    const canvas = document.getElementById('particles-canvas');
    if (canvas) {
      initParticles(canvas);
    }
    
    return () => {
      // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    };
  }, []);

  const handleStartNow = () => {
    window.location.href = '/exercises';
  };

  return (
    <div className="page home-page">
      <canvas id="particles-canvas" className="particles-background"></canvas>
      
      <div className={`home-content ${isLoaded ? 'fade-in' : ''}`}>
        <div className="home-container">
          <div className="home-header">
            <h1 className="animated-title">–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–µ–Ω–∞–∂–µ—Ä<br />–ø–æ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É</h1>
            <p className="animated-subtitle">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–µ—Ç–∞–≤–∏–∂–Ω - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–≤—ã–∫–æ–≤ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è</p>
          </div>

          <div className="home-hero">
            <div className="hero-content">
              <h2>–†–∞–∑–≤–∏–≤–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ —Å –Ω–∞—à–∏–º–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏</h2>
              <p>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è, –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –ø–æ–º–æ–≥—É—Ç –≤–∞–º –æ—Å–≤–æ–∏—Ç—å –º–µ—Ç–æ–¥—ã —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏—Ö –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö.</p>
              
              <div className="hero-actions">
                <button 
                  className="primary-button pulse-animation" 
                  onClick={handleStartNow}
                >
                  –ù–∞—á–∞—Ç—å —Å–µ–π—á–∞—Å
                </button>
                <Link to="/exercises" className="secondary-link">
                  –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
                </Link>
              </div>
            </div>
            
            <div className="feature-cards">
              <div className="feature-card">
                <div className="feature-icon">üìä</div>
                <h3>REST API</h3>
                <p>–ü—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–º–∏ –∏ API</p>
              </div>
              
              <div className="feature-card">
                <div className="feature-icon">üí°</div>
                <h3>–°–∏—Å—Ç–µ–º–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ</h3>
                <p>–†–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤ –∞–Ω–∞–ª–∏–∑–∞ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º</p>
              </div>
              
              <div className="feature-card">
                <div className="feature-icon">üîÑ</div>
                <h3>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
                <p>–£—á–∏—Ç–µ—Å—å –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –≤ —Ç–µ–æ—Ä–∏–∏</p>
              </div>
            </div>
          </div>
          
          <div className="stats-section">
            <div className="stat-item">
              <span className="stat-number">10+</span>
              <span className="stat-label">–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–π</span>
            </div>
            <div className="stat-item">
              <span className="stat-number">3</span>
              <span className="stat-label">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</span>
            </div>
            <div className="stat-item">
              <span className="stat-number">24/7</span>
              <span className="stat-label">–î–æ—Å—Ç—É–ø</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —á–∞—Å—Ç–∏—Ü –Ω–∞ —Ñ–æ–Ω–µ
const initParticles = (canvas) => {
  const ctx = canvas.getContext('2d');
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
  
  const particles = [];
  const particleCount = 50;
 
  for (let i = 0; i < particleCount; i++) {
    particles.push({
      x: Math.random() * canvas.width,
      y: Math.random() * canvas.height,
      size: Math.random() * 3 + 1,
      speedX: Math.random() * 1 - 0.5,
      speedY: Math.random() * 1 - 0.5,
      color: `rgba(138, 79, 255, ${Math.random() * 0.5 + 0.2})`
    });
  }
  
  function animate() {
    // –û—á–∏—â–∞–µ–º canvas —Å –Ω–µ–±–æ–ª—å—à–æ–π –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ —Å–ª–µ–¥–∞
    ctx.fillStyle = 'rgba(249, 249, 249, 0.05)';
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    for (let i = 0; i < particles.length; i++) {
      const p = particles[i];
           
      p.x += p.speedX;
      p.y += p.speedY;
      
      if (p.x < 0 || p.x > canvas.width) p.speedX *= -1;
      if (p.y < 0 || p.y > canvas.height) p.speedY *= -1;
      
      ctx.beginPath();
      ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);
      ctx.fillStyle = p.color;
      ctx.fill();
      
      // –°–æ–µ–¥–∏–Ω—è–µ–º —á–∞—Å—Ç–∏—Ü—ã –ª–∏–Ω–∏—è–º–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –±–ª–∏–∑–∫–æ –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É
      for (let j = i; j < particles.length; j++) {
        const p2 = particles[j];
        const dx = p.x - p2.x;
        const dy = p.y - p2.y;
        const distance = Math.sqrt(dx * dx + dy * dy);
        
        if (distance < 100) {
          ctx.beginPath();
          ctx.strokeStyle = `rgba(138, 79, 255, ${0.1 * (1 - distance/100)})`; // –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–±–ª–∏–∂–µ–Ω–∏–∏
          ctx.lineWidth = 0.5;
          ctx.moveTo(p.x, p.y);
          ctx.lineTo(p2.x, p2.y);
          ctx.stroke();
        }
      }
    }
    
    requestAnimationFrame(animate);
  }
  
  window.addEventListener('resize', () => {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
  });
  
  animate();
};

export default Home;