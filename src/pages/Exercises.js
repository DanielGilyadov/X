// src/pages/Exercises.jsx - –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import './Pages.css';
import './ExercisesPage.css'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º –Ω–æ–≤—ã–π CSS —Ñ–∞–π–ª
import { getTypeTasks } from '../services/api';
import Spinner from '../components/common/Spinner';

const Exercises = () => {
  const [categories, setCategories] = useState([]);
  const [error, setError] = useState(null);
  const [isLoading, setIsLoading] = useState(false);
  const [isInitialLoad, setIsInitialLoad] = useState(true);

  useEffect(() => {
    const fetchData = async () => {
      try {
        setIsLoading(true);
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º API-–∑–∞–ø—Ä–æ—Å
        const response = await getTypeTasks();
        setCategories(response);
        console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', response);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', err);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      } finally {
        setIsLoading(false);
        setIsInitialLoad(false);
      }
    };
    
    fetchData();
  }, []);

  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–∏—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
  if (isInitialLoad) {
    return (
      <div className="page page-exercises" style={{ display: 'flex', justifyContent: 'center', paddingTop: '50px' }}>
        <Spinner size="large" text="–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π..." />
      </div>
    );
  }

  return (
    <div className="page page-exercises">
      <div className="exercises-header">
        <h1 className="exercises-title">–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è</h1>
        <p className="exercises-description">
          –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –ø–æ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ –∏ 
          —Ä–∞–∑–≤–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ API.
        </p>
        
        {isLoading && <div className="loading-indicator"></div>}
      </div>
      
      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å */}
      {error && <div className="error-message">{error}</div>}
      
      <div className="exercises-list">
        {categories.length > 0 ? (
          categories.map((category) => (
            <Link 
              to={`/exercises/${category.type}`} 
              key={category.type} 
              className="exercise-card-link"
            >
              <div className="exercise-card">
                <h3>{category.title}</h3>
                <p>{category.description || '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–≤—ã–∫–æ–≤ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ —Ä–∞–±–æ—Ç—ã —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–º–∏.'}</p>
                <div className="exercise-card-footer">
                  <span className="exercise-count">{category.exercises || '–ù–∞–±–æ—Ä'} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π</span>
                  <span className="exercise-arrow">‚Üí</span>
                </div>
              </div>
            </Link>
          ))
        ) : !isLoading && (
          <div className="no-exercises">
            <div className="no-exercises-icon">üìö</div>
            <p className="no-exercises-message">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π.</p>
            <button className="primary-button" onClick={() => window.location.reload()}>
              –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            </button>
          </div>
        )}
      </div>
    </div>
  );
};

export default Exercises;